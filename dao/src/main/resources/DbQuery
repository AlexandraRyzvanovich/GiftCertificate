CREATE TABLE CERTIFICATE (
    id SERIAL  PRIMARY KEY ,
    NAME           VARCHAR(50)   NOT NULL UNIQUE,
    DESCRIPTION    VARCHAR(200)     NOT NULL,
    PRICE        NUMERIC NOT NULL CHECK(PRICE >0),
    CREATION_DATE         DATE NOT NULL,
	MODIFICATION_DATE DATE,
    VALID_DAYS INT CHECK (VALID_DAYS > 0)
);

CREATE TABLE TAG (
    ID SERIAL  PRIMARY KEY ,
    NAME VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE CERTIFICATE_TAG (
    CERTIFICATE_ID INTEGER REFERENCES CERTIFICATE(ID) ON DELETE CASCADE,
	TAG_ID INTEGER REFERENCES TAG(ID) ON DELETE CASCADE,
	PRIMARY KEY (CERTIFICATE_ID, TAG_ID)
);

CREATE TABLE USERS (
    ID SERIAL PRIMARY KEY ,
    NAME VARCHAR(50) NOT NULL,
    SURNAME VARCHAR(50) NOT NULL
);

CREATE TABLE ORDERS (
    ID SERIAL PRIMARY KEY ,
    USER_ID INTEGER REFERENCES USERS(ID) ON DELETE CASCADE,
	DATE DATE NOT NULL,
	AMOUNT NUMERIC NOT NULL CHECK(AMOUNT > 0),
	CERTIFICATE_ID INTEGER REFERENCES CERTIFICATE(ID) ON DELETE CASCADE
);
ALTER TABLE users ADD COLUMN email varchar(100) UNIQUE NOT NULL;
ALTER TABLE users ADD COLUMN password  varchar(200) NOT NULL;
create type user_role as enum ('GUEST', 'USER', 'ADMINISTRATOR');
ALTER TABLE users ADD COLUMN role  user_role default 'GUEST' NOT NULL;




